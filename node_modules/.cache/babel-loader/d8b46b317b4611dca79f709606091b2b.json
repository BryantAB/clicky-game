{"ast":null,"code":"var _jsxFileName = \"/Users/abl0e/Desktop/Yesssir/React-Clicky-Game/src/components/MainGameContainer/MainGameContainer.js\";\nimport React, { Component } from 'react';\nimport MemoryCard from '../MemoryCard';\nimport images from \"../../images.json\";\nimport \"./MainGameContainer.css\";\n\nclass MainGameContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images,\n      message: \"Click one of the logos to begin!\",\n      score: 0,\n      topScore: 0\n    };\n\n    this.handleClick = (id, clicked) => {\n      const imageOrder = this.state.images;\n\n      if (clicked) {\n        imageOrder.forEach((image, index) => {\n          imageOrder[index].clicked = false;\n        });\n        return this.setState({\n          image: imageOrder.sort(() => Math.random() - 0.5),\n          message: \"You Guessed Incorrectly!\",\n          score: 0\n        });\n      } else {\n        imageOrder.forEach((image, index) => {\n          if (id === image.id) {\n            imageOrder[index].clicked = true;\n          }\n        });\n        const {\n          topScore,\n          score\n        } = this.state;\n        const newScore = score + 1;\n        const newTopScore = newScore > topScore ? newScore : topScore;\n        return this.setState({\n          image: imageOrder.sort(() => Math.random() - 0.5),\n          message: \"You Guessed Correctly!\",\n          score: newScore,\n          topScore: newTopScore\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid mainCardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gameMessage text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.message)), React.createElement(\"div\", {\n      className: \"gameScores text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Score: \", this.state.score, \" | Top Score: \", this.state.topScore)), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.images.map(image => React.createElement(MemoryCard, {\n      key: image.id,\n      id: image.id,\n      name: image.name,\n      clicked: image.clicked,\n      image: image.image,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))));\n  }\n\n}\n\n;\nexport default MainGameContainer;","map":{"version":3,"sources":["/Users/abl0e/Desktop/Yesssir/React-Clicky-Game/src/components/MainGameContainer/MainGameContainer.js"],"names":["React","Component","MemoryCard","images","MainGameContainer","state","message","score","topScore","handleClick","id","clicked","imageOrder","forEach","image","index","setState","sort","Math","random","newScore","newTopScore","render","map","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MemoryCard from '../MemoryCard';\nimport images from \"../../images.json\";\nimport \"./MainGameContainer.css\";\n\nclass MainGameContainer extends Component {\n\tstate = {\n\t\timages,\n\t\tmessage: \"Click one of the logos to begin!\",\n\t\tscore: 0,\n\t\ttopScore: 0\n\t};\n\t\n\thandleClick = (id, clicked) => {\n\n\t\tconst imageOrder = this.state.images;\n\n\t\tif (clicked) {\n\t\t\timageOrder.forEach((image, index) => {\n\t\t\t\timageOrder[index].clicked = false;\n\t\t\t});\n\t\t\treturn this.setState({\n\t\t\t\timage: imageOrder.sort(() => Math.random() - 0.5),\n\t\t\t\tmessage: \"You Guessed Incorrectly!\",\n\t\t\t\tscore: 0\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\timageOrder.forEach((image, index) => {\n\t\t\t\tif (id === image.id) {\n\t\t\t\t\timageOrder[index].clicked = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst { topScore, score } = this.state;\n\t\t\tconst newScore = score + 1;\n\t\t\tconst newTopScore = newScore > topScore ? newScore : topScore;\n\n\t\t\treturn this.setState({\n\t\t\t\timage: imageOrder.sort(() => Math.random() - 0.5),\n\t\t\t\tmessage: \"You Guessed Correctly!\",\n\t\t\t\tscore: newScore,\n\t\t\t\ttopScore: newTopScore,\n\t\t\t})\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container-fluid mainCardContainer\">\n\t\t\t<div className=\"gameMessage text-center\">\n\t\t\t\t\t\t<p>{this.state.message}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"gameScores text-center\">\n\t\t\t\t\t\t<p>Score: {this.state.score} | Top Score: {this.state.topScore}</p>\n\t\t\t\t\t</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{this.state.images.map(image => (\n\t\t\t\t\t\t<MemoryCard\n\t\t\t\t\t\t\tkey={image.id}\n\t\t\t\t\t\t\tid={image.id}\n\t\t\t\t\t\t\tname={image.name}\n\t\t\t\t\t\t\tclicked={image.clicked}\n\t\t\t\t\t\t\timage={image.image}\n\t\t\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default MainGameContainer;"]},"metadata":{},"sourceType":"module"}